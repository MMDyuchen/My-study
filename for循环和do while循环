#define _CRT_SECURE_NO_WARMINGS 1
#include <stdio.h>//strand input output
#include <string.h>
//for 循环打出1~10的数字
int main()
{
	int i = 0;
	for ( i = 1; i <= 10; i++)
		{
			printf("%d",i);
		}	
	return 0;
}



int main()
{
	int i = 0;
	for ( i = 1; i <= 10; i++)
		{
			if( i == 5)
				break;
			printf("%d",i);
		}	
	return 0;
}


int main()
{
	int i = 0;
	for ( i = 1; i <= 10; i++)
		{
			if( i == 5)
				continue;
			printf("%d",i);
		}	
	return 0;
}

//陷入死循环，continue之后无法调整i
int main()
{
	int i = 0;
	while ( i <= 10)
		{
			if( i == 5)
				continue;
			printf("%d",i);
			i ++;
		}	
	return 0;
}


//初始化、判断、调整皆可省略
int main()
{
	for ( ;;)

	{
		printf("hehe");	
		
	}
	return 0;
}

//但一旦判断省略会恒为真，即死循环
//打印100次呵呵
int main()
{
	int i= 0;
	int j= 0;
	for ( i= 0; i<10;i ++)
	{
		for ( j= 0; j<10;j ++)	
		printf(" hehe \n");	
	}
	return 0;
}

//省略初始化，只打印10次呵呵
int main()
{
	int i= 0;
	int j= 0;
	for ( ; i<10;i ++)
	{
		for ( ; j<10;j ++)	//j被省略初始化，j=10一直保留，故停止循环
		printf(" hehe \n");
	}
	return 0;
}

int main()
{
	int x,y;
	for (x=0, y=0; x<2 && y<5 ; ++x,y++)
	{
		printf(" hehe \n");
	}
	return 0;
}

//判断条件k为假，不进入循环，故循环0次
int main()
{
	int i = 0;
	int k = 0;
	for(i = 0,k = 0;k =0;i++,k++)
		k++;
		return 0;
}

//计算n的阶乘
int main()
{
	int i = 0;
	int n = 0;
	int ret = 1;
	scanf("%d", &n);
	for(i = 1;i<=n;i++)
	{
		ret = ret * i;
	}
	printf("ret = %d\n",ret);
	return 0;
}

//计算1!+2!+...+10!的和
int main()
{
	int i = 0;
	int n = 0;
	int ret = 1;
	int he = 0;
	for(n=1;n<=10;n++)
	{
		for(i = 1,ret = 1;i<=n;i++)
		{
			ret = ret * i;
		}
		he = he + ret;
	}
	printf("%d\n",he);	
	return 0;
}

//有序集合内用二分法寻找目标
int main()
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int k = 7;
	int sz = sizeof(arr)/sizeof(arr[0]);
	int left = 0;
	int right = sz -1;
	while(left<=right)
	{
		int mid= (left+right)/2;
		if(arr[mid] > k)
		{
			right = mid-1;
		}
		else if(arr[mid]<k)
		{
			left = mid+1;
		}
		else
		{
		printf("Get it!The number is %d\n",mid);
		break;
		}
	}	
	if(left > right)
		{	
		printf("Cna't find it!");
		}
	return 0;
}

//两端向内移动
#define _CRT_SECURE_NO_WARMINGS 1
#include <stdio.h>//strand input output
#include <string.h>
#include <windows.h>
#include <stdlib.h>
//两端向内移动
int main()
{
	char arr1[] = "welcome to bit!!!!!!";
	char arr2[] = "####################";
	int left = 0;
	int right = sizeof(arr1)/sizeof(arr1[0])-2;
	//int right = strlen(arr1)-1;
	while(left<=right)
	{
		arr2[left] = arr1[left];
		arr2[right] = arr1[right];
		printf("%s\n",arr2);
		Sleep(1000);
		system("cls");
		left++;
		right--;
	}
	printf("%s\n",arr2);	
	return 0;
}

//自己写的，模拟输入三次密码，正确则直接进入，错三次直接退出
#define _CRT_SECURE_NO_WARMINGS 1
#include <stdio.h>//strand input output
#include <string.h>
#include <windows.h>
#include <stdlib.h>
//模拟用户输入密码登录，超过三次退出
int main()
{
	int i = 0;
	char arr1[10]={"123456"};
	char arr2[10];
	printf("please put password:>");
	scanf("%s",arr2);
	for(i =0; i<2 ;i++)
	{
		if(strcmp(arr2,arr1) ==0)
		{
			printf("password is right!welcome!");
			break;
		}
		else
		{
		printf("password is wrong,please try again:>");
		scanf("%s",arr2);
		}
	}
	return 0;
}

//模拟用户输入密码登录，超过三次退出
#define _CRT_SECURE_NO_WARMINGS 1
#include <stdio.h>//strand input output
#include <string.h>
#include <windows.h>
#include <stdlib.h>
int main()
{
	int i = 0;
	char password[20] = {0};
	for(i=0;i<3;i++)
	{
		printf("please put password:>");
		scanf( "%s", password);
		if(strcmp(password,"123456") ==0)
		{
			printf("password is right!welcome\n");
			break;
		}
		else
		{
			printf("password is wrong\n");
		}	
	}
	if(i == 3)
		printf("password is wrong too many\n");
	return 0;
}
